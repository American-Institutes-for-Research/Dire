[{"path":"/articles/MML.html","id":"parameter-estimation","dir":"Articles","previous_headings":"","what":"Parameter Estimation","title":"Marginal Maximum Likelihood Regression Estimation","text":"Student test data consist series items student receives score. matrix \\(\\bm{R}\\) row \\(\\) regarding student column \\(j\\) regarding item \\(R_{ij}\\) student \\(\\)’s score item \\(j\\) takes integer values 0 maximum score item. Many possible models exist \\(\\bm{R}\\) matrix data, covered, briefly, appendix document. rest document simply assumes item parameters estimated consistent estimator treated estimated without error. MML model test data \\(N\\) individuals, conditional set parameters set \\(K\\) test items, likelihood regression equation \\[\\begin{align} \\mathcal{L} (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) = \\prod_{=1}^N  \\left[ \\int_{-\\infty}^{\\infty} \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(\\theta_i - \\bm{X}_i \\beta)^2}{2\\sigma^2}  \\, \\prod_{j=1}^K {\\rm Pr}(\\bm{R}_{ij}|\\theta_i,\\bm{P}_j) d\\theta_i \\right]^{\\bm{w}_i} \\end{align}\\] \\(\\mathcal{L}\\) likelihood regression parameters \\(\\bm{\\beta}\\) full sample weights \\(\\bm{w}_i\\) conditional item score matrix \\(\\bm{R}\\), student covariate matrix \\(\\bm{X}\\), item parameter data \\(\\bm{P}\\); \\(\\sigma^2\\) variance regression residual; \\(\\theta_i\\) \\(\\)th student’s latent ability measure integrated ; \\({\\rm Pr}(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j)\\) probability individual \\(\\)’s score test item \\(j\\), conditional student’s ability item parameters \\(\\bm{P}_j\\)—see appendix example forms \\({\\rm Pr}(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j)\\). Note user interested population mean, can regarded special case; \\(\\bm{X}\\) vector ones, value \\(\\bm{\\beta}\\) one element mean estimate. integral evaluated using trapezoid rule quadrature points \\(t_q\\) quadrature weights \\(\\delta\\) \\[\\begin{align} \\mathcal{L} (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) &= \\prod_{=1}^N \\left[ \\sum_{q=1}^Q \\delta \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(t_q - \\bm{X}_i \\bm{\\beta})^2}{2\\sigma^2} \\prod_{j=1}^K  {\\rm Pr}(\\bm{R}_{ij}|t_q, \\bm{P}_j)\\right]^{\\bm{w}_i} \\end{align}\\] \\(\\delta\\) distance two uniformly spaced quadrature points \\(\\delta = t_{q+1} - t_{q}\\) \\(q\\) least one less \\(Q\\). range value \\(Q\\) parameterize quadrature, accuracy varied ensure convergence. advantage trapezoidal rule fixed quadrature points allow values probability calculated per student. variance formulas use log-likelihood, given \\[\\begin{align} \\ell (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) &= \\sum_{=1}^N \\bm{w}_i \\, {\\rm log} \\left[\\delta \\sum_{q=1}^Q \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(t_q - \\bm{X}_i \\bm{\\beta})^2}{2\\sigma^2} \\prod_{j=1}^K  {\\rm Pr}(\\bm{R}_{ij}|t_q, \\bm{P}_j) \\right] \\end{align}\\] Note \\(\\delta\\) can removed optimization, presence adds \\({\\rm log}(\\delta) \\sum \\bm{w}_i\\) log-likelihood.","code":""},{"path":"/articles/MML.html","id":"composite-scores","dir":"Articles","previous_headings":"Parameter Estimation","what":"Composite Scores","title":"Marginal Maximum Likelihood Regression Estimation","text":"outcome interest composite scores, parameters estimated separately estimating coefficients subscale (\\(\\bm{\\beta}_s\\) subscale \\(s\\)) calculating composite scores (\\(\\bm{\\beta}_c\\)) using subscale weights (\\(\\omega_s\\)). \\[\\begin{align} \\bm{\\beta}_c &= \\sum_{s=1}^S \\omega_s \\bm{\\beta}_s \\label{eq:composite} \\end{align}\\] \\(S\\) subscales. variance estimation, covariance matrix (\\(\\bm{\\Sigma}\\)) subscales interest. covariance terms estimated one time using submatrix \\[\\begin{align} \\bm{\\Sigma}_{ij} = \\left[ \\begin{array}{cc} s_i & s_{ij} \\\\ s_{ij} & s_j \\end{array} \\right] \\end{align}\\] two jointly bivariate normally distributed \\[\\begin{align} \\left( \\begin{array}{c} \\beta_i \\\\ \\beta_j \\end{array} \\right) | \\bm{\\Sigma}_{ij}, \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P} & \\sim {\\rm MVN} \\left( \\left. \\left( \\begin{array}{c} \\beta_i \\\\ \\beta_j \\end{array} \\right), \\bm{\\Sigma}_{ij} \\right| \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P} \\right) \\label{eq:compcov} \\end{align}\\] \\({\\rm MVN}(u, S|\\cdot)\\) multivariate normal density function mean \\(u\\) covariance \\(S\\), conditional \\(\\cdot\\), additional parameters. likelihood \\[\\begin{align} \\ell \\left( s_{ij} \\left| \\beta_i, \\beta_j , s_i, s_j; \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}\\right. \\right) &= \\sum_{n=1}^N \\bm{w}_n \\, {\\rm log} \\left\\{ \\delta^2 \\sum_{q_i=1}^Q \\sum_{q_j=1}^Q \\frac{1}{\\sqrt{2\\pi}} \\frac{1}{\\sqrt{|\\bm{\\Sigma}|}}\\exp \\left( \\bm{r}_{q_1q_2}^T \\bm{\\Sigma}^{-1} \\bm{r}_{q_1 q_2} \\right) \\right. \\\\ &\\mathrel{\\phantom{=}} \\left. \\times \\left[ \\prod_{k=1}^K  {\\rm Pr}(\\bm{R}_{nk}|t_{q_1}, \\bm{P}_k) \\right] \\left[ \\prod_{k=1}^K {\\rm Pr}(\\bm{R}_{nk}|t_{q_2}, \\bm{P}_k) \\right] \\right\\} \\label{eq:compcovlnl} \\end{align}\\] \\(|\\bm{\\Sigma}|\\) determinant \\(\\bm{\\Sigma}\\), residual term defined \\[\\begin{align} \\bm{r}_{q_1 q_2} = \\left( \\begin{array}{c} t_{q_1} - \\bm{X}_n \\bm{\\beta}_i  \\\\ t_{q_2} - \\bm{X}_n \\bm{\\beta}_j \\end{array} \\right)  \\end{align}\\] Notice parameters \\(\\bm{\\beta}_i\\), \\(\\bm{\\beta}_j\\), \\(s_i\\), \\(s_j\\) used -subscale estimation optimization density function exclusively covariance term \\(s_{ij}\\). joint distribution vector \\[\\begin{align} \\bm{\\beta}_{\\cdot} = \\left( \\begin{array}{c} \\bm{\\beta}_1 \\\\ \\vdots \\\\ \\bm{\\beta}_S \\end{array} \\right) \\end{align}\\] \\[\\begin{align} \\bm{\\beta}_{\\cdot} ,\\bm{\\Sigma} | \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P} &= {\\rm MVN}(\\left. \\bm{\\beta}_{\\cdot}, \\bm{\\Sigma} \\right| \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P})   \\label{eq:lnlcomposite} \\end{align}\\] intractably high dimensional log-likelihood involves \\(S\\) sums inside log-likelihood.","code":""},{"path":"/articles/MML.html","id":"variance-estimation","dir":"Articles","previous_headings":"","what":"Variance Estimation","title":"Marginal Maximum Likelihood Regression Estimation","text":"Estimating variance parameters \\(\\bm{\\beta}\\) can done one several ways. inverse Hessian matrix consistent estimator estimator \\(\\bm{\\beta}\\) consistent (Green, 2003, p. 520): \\[\\begin{align} {\\rm Var}(\\bm{\\beta}) = -\\bm{H}(\\bm{\\beta})^{-1} =  - \\left[\\frac{\\partial^2 \\ell(\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X})}{\\partial \\bm{\\beta}^2} \\right]^{-1} \\label{eq:vbeta} \\end{align}\\] variance returned variance method set consistent left default. class variance estimators typically called “sandwich” “robust” variance estimators allow variation residual form \\[\\begin{align} {\\rm Var}(\\bm{\\beta}) = H(\\bm{\\beta})^{-1} \\bm{V} H(\\bm{\\beta})^{-1} \\label{eq:sandwich} \\end{align}\\] \\(V\\) estimate variance summed score function (Binder, 1983). convenience sample, provide two robust estimators. First, -called robust (Huber Huber-White) variance estimator uses \\[\\begin{align} \\bm{V} &= \\sum_{=1}^N \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\right] \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\right]^{'} \\end{align}\\] Second, cluster robust case, partial derivatives summed within cluster \\[\\begin{align} \\bm{V} &= \\sum_{c=1}^{n^\\prime} \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} \\right] \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} \\right]^{'} \\end{align}\\] \\(n^\\prime\\) clusters, indexed \\(c\\), partial derivatives summed within group \\(n_c\\) members: \\[\\begin{align} \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} &= \\sum_{=1}^{n_c} \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\end{align}\\] also provide two survey sampling variance estimation techniques. first one uses replicate weights, either jackknife, including Fay’s method jackknife, balanced repeated replication. approach, typical method estimating sampling variance still works, sampling covariance matrix can calculated \\[\\begin{align} {\\rm Var}(\\bm{\\beta}) &= \\sum_{j=1}^J \\left(\\bm{\\beta}_j - \\bm{\\beta}_0 \\right) \\left(\\bm{\\beta}_j - \\bm{\\beta}_0 \\right)^{'} \\end{align}\\] \\(J\\) replicate weights result applying direct estimation set weights \\(j\\) \\(\\bm{\\beta}_j\\), whereas \\(\\bm{\\beta}_0\\) estimate \\(\\bm{\\beta}\\) full sample weights. recomend using method replicate variance estimation requested. second survey sampling method called Taylor series method uses formula Eq. , \\(\\bm{V}\\) estimate variance score vector (Binder, 1983). implementation assumes two-stage design \\(n_a\\) primary sampling units (PSUs) stratum \\(\\) summed across \\(\\) strata according \\[\\begin{align} \\bm{V} &= \\sum_{=1}^\\bm{V}_a \\end{align}\\] \\(\\bm{V}_a\\) variance estimate stratum \\(\\) defined \\[\\begin{align} \\bm{V}_a &= \\frac{n_a}{n_a -1} \\sum_{p=1}^{n_a} \\left( \\bm{s}_p - \\bar{\\bm{s}}_a \\right)\\left( \\bm{s}_p - \\bar{\\bm{s}}_a \\right)' \\label{eq:Va} \\end{align}\\] \\(s_p\\) sum weighted (pseudo-) score vector includes units PSU \\(p\\) stratum \\(\\) \\(\\bar{\\bm{s}}_a\\) (unweighted) mean \\(\\bm{s}_p\\) terms stratum \\(\\) \\[\\begin{align} s_p &=\\sum_{\\{\\rm PSU} \\ p}\\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta}    & \\bar{\\bm{s}}_a&= \\frac{1}{n_a} \\sum_{p \\{\\rm stratum} \\ } s_p \\end{align}\\] stratum one PSU, \\(\\bm{V}_a\\) undefined. best approach analyst adjust strata PSU identifiers, manner consistent sampling approach, avoid singleton strata. Two simpler less defensible options available. First, strata single PSUs can dropped variance estimation, yielding underestimate variance. second option singleton stratum use overall mean \\(s_p\\) place \\(\\bar{s}_a\\). , \\[\\begin{align} \\bar{\\bm{s}} &= \\frac{1}{n^\\prime} \\sum s_p \\end{align}\\] sum across PSUs, \\(n^\\prime\\) number PSUs across strata. , singleton stratum, Eq.  becomes \\[\\begin{align} \\bm{V}_a &= 2 \\left( \\bm{s}_p - \\bar{\\bm{s}} \\right)\\left( \\bm{s}_p - \\bar{\\bm{s}} \\right)' \\label{eq:Va1} \\end{align}\\] value 2 used place \\(\\frac{n_a}{n_a-1}\\), undefined \\(n_a=1\\). option can underestimate variance thought likely overestimate .","code":""},{"path":"/articles/MML.html","id":"composite-scores-1","dir":"Articles","previous_headings":"Variance Estimation","what":"Composite Scores","title":"Marginal Maximum Likelihood Regression Estimation","text":"likelihood composite scores (Eq. ) additively separable, covariances (including variances) can calculated two steps using Eq. . First, covariance matrix \\(\\bm{\\xi}\\) formed, composite covariance terms estimated variance linear combination elements \\(\\bm{\\xi}\\). first step, methods section “Variance Estimation” applied Eq. , treating \\(\\bm{\\xi}\\) fashion Eq.  treats \\(\\bm{\\beta}\\). step results block diagonal inverse Hessian matrix, block subscale, potentially dense matrix \\(\\bm{V}\\). matrix square \\(S \\cdot (\\zeta+1)\\) rows columns, \\(\\zeta\\) number elements regression formula (subscale), one added \\(\\sigma\\) terms. step results following matrix: \\[\\begin{align} {\\rm Var}(\\bm{\\xi})=H(\\bm{\\xi})^{-1} \\bm{V} H(\\bm{\\xi})^{-1} \\end{align}\\] second step, composite coefficient \\(\\)th variance term \\[\\begin{align} {\\rm Var}(\\bm{\\xi}_{ci}) &= \\bm{e}_i H(\\bm{\\xi})^{-1} \\bm{V} H(\\bm{\\xi})^{-1} \\bm{e}_i \\end{align}\\] \\(\\bm{\\xi}_{ci}\\) composite coefficient \\(\\)th coefficient, \\(\\bm{e}_{}\\) vector weights arranged \\[\\begin{align} \\bm{\\xi}_{ci} = \\bm{e}_{}^T \\bm{\\xi} \\end{align}\\] covariance two terms, \\(\\) \\(j\\), simple extension \\[\\begin{align} {\\rm Cov}(\\bm{\\beta}_{ci}, \\bm{\\beta}_{cj}) &= \\bm{e}_i H(\\bm{\\beta})^{-1} \\bm{V} H(\\bm{\\beta})^{-1} \\bm{e}_j \\end{align}\\] uses definition, \\[\\begin{align} \\bm{\\xi}_{cj} &= \\bm{e}_{j}^T \\bm{\\xi} \\end{align}\\] simple example may help clarify. Imagine composite score composed two subscales, 1 2, weights \\(\\omega_1 = 0.4\\) \\(\\omega_2=0.6\\). Supposed user interested regression form \\[\\begin{align} \\theta = + x_1 \\cdot b + \\epsilon \\label{eq:compex} \\\\ \\epsilon \\sim N(0,\\sigma) \\end{align}\\] regression Eq.  fit subscale 1 subscale 2; first fit yield estimated values \\(\\left\\{ a_1, b_1, \\sigma_1 \\right\\}\\), second fit yield \\(\\left\\{ a_2, b_2, \\sigma_2 \\right\\}\\). estimated value, example, \\(a_c\\), \\(a_c = 0.4\\cdot\\alpha_1 + 0.6\\cdot\\alpha_2\\). stacking estimates together, \\[\\begin{align} \\bm{\\theta} &= \\begin{bmatrix}  a_1 \\\\  b_1 \\\\  \\sigma_1\\\\  a_2 \\\\  b_2\\\\  \\sigma_2 \\end{bmatrix} \\end{align}\\] covariance matrix can estimated result matrix \\(\\bm{\\Omega} \\equiv {\\rm Var}(\\bm{\\beta})\\) Eq.  six rows six columns. Using vector \\[\\begin{align} \\bm{e}_1 &= \\begin{bmatrix}  0.4 \\\\  0 \\\\  0\\\\  0.6 \\\\  0\\\\  0 \\end{bmatrix} \\end{align}\\] can easily confirmed \\(a_c = \\bm{e}_1^T \\bm{\\xi}\\), \\({\\rm Var}(a_c)= \\bm{e}_1^T \\bm{\\Omega} \\bm{e}_1\\).","code":""},{"path":"/articles/MML.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Marginal Maximum Likelihood Regression Estimation","text":"Binder, D. . (1983). variances asymptotically normal estimators complex surveys. International Statistical Review, 51(3), 279–292. Black, P. E. (2019). Big-O notation. P. E. Black (Ed.), Dictionary algorithms data structures. Washington, DC: National Institute Standards Technology. Retrieved https://www.nist.gov/dads/HTML/bigOnotation.html Cohen, J. D., & Jiang, T. (1999). Comparison partially measured latent traits across nominal subgroups. Journal American Statistical Association, 94(448), 1035–1044. Green, W. H. (2003). Econometric analysis Upper Saddle River, NJ: Prentice Hall. Huber, P. J. (1967). behavior maximum likelihood estimates nonstandard conditions. Proceedings Fifth Berkeley Symposium Mathematical Statistics Probability, Vol. : Statistics (pp. 221–233). Berkeley, CA: University California Press. Johnson, S. G. (2010). Notes convergence trapezoidal-rule quadrature. Retrieved https://math.mit.edu/~stevenj/trapezoidal.pdf McCullagh, P. & Nelder, J. . (1989). Generalized linear models. (2nd ed.). London, UK: Chapman & Hall/CRC. NAEP. (2008). generalized partial credit model [NAEP Technical Documentation Website]. Retrieved https://nces.ed.gov/nationsreportcard/tdw/analysis/scaling_models_gen.aspx. White, H. (1980). heteroskedasticity-consistent covariance matrix estimator direct test heteroskedasticity. Econometrica, 48(4), 817–838.","code":""},{"path":"/articles/MML.html","id":"appendix--test-probability-density-functions","dir":"Articles","previous_headings":"","what":"Appendix. Test Probability Density Functions","title":"Marginal Maximum Likelihood Regression Estimation","text":"cases scored either correct incorrect, use three parameter logit (3PL) model: \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= g_j + \\frac{1-g_j}{1+\\exp\\left[ -D \\, a_j \\, (\\theta_i - d_j)\\right]} \\label{eq:3PL} \\end{align}\\] \\(g_j\\) guessing parameter, \\(a_j\\) discrimination factor, \\(d_j\\) item difficulty, \\(D\\) constant, usually set 1.7, map \\(\\theta_i\\) \\(d_j\\) terms probit-like space; term applied tradition. two parameter logit (2PL) used, Eq.  modified omit \\(g_j\\) (effectively setting zero): \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[ -D \\, a_j \\, (\\theta_i - d_j)\\right]} \\label{eq:2PL} \\end{align}\\] Rasch model used, Eq.  modified set \\(a_j\\) single \\(\\), \\(D\\) set one. \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[ - \\, (\\theta_i - d_j)\\right]} \\label{eq:Rasch} \\end{align}\\] Graded Response Model (GRM) probability density generalizes ordered logit (McCullagh & Nelder, 1989): \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[-D\\, a_j \\, (\\theta_i - d_{R_{ij},j})\\right]} - \\frac{1}{1+\\exp\\left[-D\\, a_j \\, (\\theta_i - d_{1+R_{ij},j})\\right]} \\label{eq:grm} \\end{align}\\] parameters \\(\\bm{P}_j\\) cut points \\(d_{cj}\\), \\(d_{0j}=-\\infty\\) \\(d_{C+1,j}=\\infty\\). first term right side Eq. , subscript \\(R_{ij}\\) \\(d_{R_{ij},j}\\) indicates cut point associated response level item \\(j\\) person \\(\\), whereas last subscript (\\(j\\)) indicates \\(d\\) term item \\(j\\). second term, cut point cut point used. Generalized Partial Credit Model (GPCM) probability density generalizes multinomial logit (McCullagh & Nelder, 1989) \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{\\exp \\left[ \\sum_{c=0}^{R_{ij}} D a_j (\\theta_i - d_{cj}) \\right]}{\\sum_{r=0}^{C} \\exp \\left[ \\sum_{c=0}^{r} D a_j (\\theta_i - d_{cj}) \\right]} \\end{align}\\] \\(c\\) indexes cut points, \\(C\\), \\(j\\) indexes item. GPCM equation indeterminancy \\(d_j\\) terms increase make values probability . can solve indeterminacy several ways. NAEP (2008) uses mean difficulty (\\(b_j\\)), \\(d_j\\) values given \\[\\begin{align} d_{0j} &= 0 &       d_{cj} &= b_j - \\delta_{jc} \\, ; \\, 1 \\leq c \\leq C \\end{align}\\] \\(\\delta_{jc}\\) values estimated \\(0=\\sum_{c=1}^{C} \\delta_{jc}\\). package, polyParamTab itemLocation, serves b. itemLocation, package uses \\(\\delta\\) values directly \\[\\begin{align} d_{0j} &= 0 &       d_{cj} &= \\delta_{jc} \\, ; \\, 1 \\leq c \\leq C \\end{align}\\] Partial Credit Model (PCM) used, value \\(D\\) set one, whereas \\(a_j\\) shared across items. \\[\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{\\exp \\left[ \\sum_{c=0}^{R_{ij}} (\\theta_i - d_{cj}) \\right]}{\\sum_{r=0}^{C} \\exp \\left[ \\sum_{c=0}^{r} (\\theta_i - d_{cj}) \\right]} \\end{align}\\]","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emmanuel Sikali. Project director. Paul Bailey. Author, maintainer. Eric Buehler. Author. Sun-joo Lee. Author. Harold Doran. Author. Claire Kelley. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bailey P, Buehler E, Lee S, Doran H (2022). Dire: Linear Regressions Latent Outcome Variable. R package version 2.0.2, https://american-institutes--research.github.io/Dire/.","code":"@Manual{,   title = {Dire: Linear Regressions with a Latent Outcome Variable},   author = {Paul Bailey and Eric Buehler and Sun-joo Lee and Harold Doran},   year = {2022},   note = {R package version 2.0.2},   url = {https://american-institutes-for-research.github.io/Dire/}, }"},{"path":"/index.html","id":"dire","dir":"","previous_headings":"","what":"Linear Regressions with a Latent Outcome Variable","title":"Linear Regressions with a Latent Outcome Variable","text":"package implements survey-weighted marginal maximum estimation, type regression outcome latent trait (student ability. Instead using estimate, likelihood function marginalizes student ability. Includes variety variance estimation strategies.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Linear Regressions with a Latent Outcome Variable","text":"installing package calling require(Dire) see ?mml information example.","code":""},{"path":"/reference/drawPVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw plausible values (PVs) from an mml fit — drawPVs","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"Draw plausible values (PVs) mml fit","code":""},{"path":"/reference/drawPVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"","code":"drawPVs(x, npv, pvVariableNameSuffix = \"_dire\", ...)  # S3 method for summary.mmlMeans drawPVs(x, npv = 5L, pvVariableNameSuffix = \"_dire\", ...)  # S3 method for mmlMeans drawPVs(   x,   npv = 5L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = FALSE,   normalApprox = TRUE,   newStuDat = NULL,   newStuItems = NULL,   returnPosterior = FALSE,   construct = NULL,   ... )  # S3 method for mmlCompositeMeans drawPVs(   x,   npv = 5L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = FALSE,   normalApprox = TRUE,   newStuDat = NULL,   newStuItems = NULL,   verbose = TRUE,   ... )"},{"path":"/reference/drawPVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"x fit call mml npv integer indicating number plausible values draw pvVariableNameSuffix suffix added new PV variables construct name plausible value ID. example, construct math suffix default _dire, fourth plausible value column name, math_dire4. ... additional parameters stochasticBeta logical TRUE regression coefficients drawn posterior distribution. Can also data frame values (see Details). normalApprox logical must TRUE use normal approximation posterior distribution rather drawing actual posterior distribution. newStuDat new stuDat object, (see mml) plausible values drawn newStuItems new stuItems object, (see mml); unlike mml students items can passed function returnPosterior logical set TRUE change output include two additional data frames (see Value). construct character, changes name columns final data frame verbose logical set TRUE see status processing","code":""},{"path":"/reference/drawPVs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"returnPosterior FALSE returns object class DirePV list two elements. first, data frame row every row newStuDat (original stuDat object) id value idVar model run [construct][pvVariableNameSuffix][L] every column plausible value format.                                             [construct] name construct,                                             [pvVariableNameSuffix] value pvVariableNameSuffix argument,                                             [L] part plausible value index, 1 npv. second argument named newpvvars list element set construct lists variables construct. returnPosterior TRUE returns list three elements. One named posterior one row per idvar level newStuDat argument three columns: id value idVar model run mu posterior mean sd posterior standard deviation second list element named X design matrix newStuDat (see Value mml). third list element  rr1 element returned mml one column individual newStuDat (see Value mml).","code":""},{"path":"/reference/drawPVs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"argument passed stocasticBeta data frame column element used regression coefficient index coefficients vector. row index used nth PV nth row.","code":""},{"path":"/reference/drawPVs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"Paul Bailey, Sun-joo Lee, Eric Buehler","code":""},{"path":"/reference/drawPVs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"","code":"# See Examples in mml"},{"path":"/reference/mml.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Maximum Likelihood Estimation of Linear Models — mml","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"Implements survey-weighted marginal maximum estimation, type regression outcome latent trait (student ability). Instead using estimate, likelihood function marginalizes student ability. Includes variety variance estimation strategies.","code":""},{"path":"/reference/mml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"","code":"mml(   formula,   stuItems,   stuDat,   idVar,   dichotParamTab = NULL,   polyParamTab = NULL,   testScale = NULL,   Q = 30,   minNode = -4,   maxNode = 4,   polyModel = c(\"GPCM\", \"GRM\"),   weightVar = NULL,   multiCore = FALSE,   bobyqaControl = NULL,   composite = TRUE,   strataVar = NULL,   PSUVar = NULL,   fast = TRUE,   calcCor = TRUE,   verbose = 0 )"},{"path":"/reference/mml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"formula formula object style lm stuItems list element named student ID contains data.frame; see Details format stuDat data.frame single row per student. Predictors formula must stuDat. idVar variable name stuDat identifier. Every  ID stuDat must appear stuItems vice versa. dichotParamTab data.frame dichotomous item information, see Details polyParamTab data.frame polytomous item information, see Details testScale data.frame scaling information, see Details Q integer; number integration points minNode numeric; smallest integration point latent variable maxNode numeric; largest integration point latent variable polyModel polytomous response model; one GPCM Graded Partial Credit Model GRM Graded Response Model weightVar variable name stuDat full sample weight multiCore allows foreach package used.                  already setup  registerDoParallel. bobyqaControl deprecated. list gets passed bobyqa optimizer minqa composite logical indicating overall test treated composite score; composite weighted average subscales . strataVar character naming variable stuDat, variable indicating stratum row. Used post-hoc robust variance estimation. PSUVar character naming variable stuDat; primary sampling unit (PSU) variable. Used post-hoc robust variance estimation. values need unique across strata. fast logical indicating cpp code used mml processes.  yield speed-ups runs. calcCor set TRUE calculate covariances. Needed estimate variances form plausible values verbose integer, negative zero details, increasingly verbose messages one two","code":""},{"path":"/reference/mml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"called single subscale overall score, returns object class mmlMeans.  list elements: call call used generate mml.means object coefficients unscaled marginal maximum likelihood regression coefficients LogLik log-likelihood fit model X design matrix marginal maximum likelihood regression Convergence convergence note optimizer location used scaling estimates scale used scaling estimates lnlf log-likelihood function unscaled parameters rr1 density function individual, conditional item responses stuItems stuDat stuDat argument weightVar name weight variable stuDat nodes nodes likelihood evaluated iterations number iterations required reach convergence obs number observations used weightedObs weighted N observations strataVar column name stratum variable stuDat; potentially used variance estimation PSUVar column name PSU variable stuDat; potentially used variance estimation itemScorePoints data frame shows item IDs, number score points, expected scores (paramTab arguments), well occupied score points stuItems data frame passed mml reformatted use mml formula formula passed mml contrasts contrasts used forming design matrix xlevels levels covariates used forming design matrix polyModel value argument name passed mml paramTab data frame condenses dichotParamTab polyParamTab fast value argument name passed mml idVar value argument name passed mml posteriorEsts posterior estimates people stuDat included model composite score computed several subscales run return mmlCompositeMeans. Many elements list one element per construct. list elements: call call used generate mml.means object coefficients matrix unscaled marginal maximum likelihood regression coefficients, row represents subscale, column represents coefficient X design matrix marginal maximum likelihood regression rr1 list elements, rr1 object subscale (see mmlMeans output) ids ID variable used row stuDat Convergence vector convergence notes optimizer lnlfl list log-likelihood functions unscaled parameters, construct stuDat list stuDat data frames, used fitting construct, filtered just relevant student records weightVar name weight variable stuDat nodes nodes likelihood evaluated iterations vector number iterations required reach convergence construct obs vector number observations used construct testScale testScale used scale data weightedObs vector weighted N observations SubscaleVC covariance matrix subscales. residuals assumed multivariate normal covairiance matrix idVar name identifier used stuDat stuItems data resl list mmlMeans objects, one per construct strataVar column name stratum variable stuDat; potentially used variance estimation PSUVar column name PSU variable stuDat; potentially used variance estimation stuItems data frame passed mml reformatted use mml formula formula passed mml contrasts contrasts used forming design matrix xlevels levels covariates used forming design matrix polyModel value argument name passed mml posteriorEsts list posterior estimates people stuDat included model SubscaleVC matrix latent correlations across constructs LogLik returned likelihood composite model.","code":""},{"path":"/reference/mml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"mml function models latent outcome conditioning item response data, covariate data, item parameter information, scaling information. four parts broken least one argument . Student item response data go stuItems; whereas student covariates, weights, sampling information go stuDat. dichotParamTab polyParamTab contain item parameter information dichotomous polytomous items, respectively---item parameter data result existing item parameter scaling. case  National Assessment Educational Progress (NAEP), can found online, example, NAEP technical documentation. Finally, information scaling subscale weights composites put testScale. model dichotomous responses data , default, three Parameter Logit (3PL), unless item parameter information provided users suggests otherwise. example, scaling used two Parameter Logit (2PL) model, guessing parameter can simply set zero. polytomous responses data, model dictated polyModel argument. dichotParamTab argument data.frame column named ItemID identifies items agrees key column stuItems argument, ,  3PL item, columns slope, difficulty, guessing “”, “d”, “g” parameters, respectively; see vignette details 3PL model. Users can also use column names directly vignette notation (“”, “d”, “g”) prefer. Items missing (NA) used likelihood function.  Users wishing apply special behavior subset items can use set items invalid score put dichotParamTab column missingCode. scored missingValue proportion correct. use guessing parameter proportion correct set missingValue “c”. polyParamTab columns ItemID must match key stuItems, well slope (can also called ) corresponds parameter vignette. Users must also specify location cut points (\\(d_{cj}\\) vignette) named d1, d2, ..., dn n one less number score points. people prefer also apply  shift shift applied column named itemLocation simply adding every d* column. Items included likelihood individual value stuItems NA, provision made guessing, special provision  missing codes polytimious items. dichotParamTab polyParamTab users wishing use D paramter 1.7 (value) may specify , per item, column named D. multiple constructs, subscales, user wants composite score, additional, optional, columns test subtest can used.  columns can numeric text, must agree  columns testScale scale results. Student data broken two parts. item response data goes stuItems, student covariates formula go stuDat. Information items, item difficulties,  paramTab. dichotomous items assumed  3PL, though setting guessing parameter zero, user can use 2PL one Parameter Logit (1PL) Rasch models. model polytomous responses data dictated polyModel argument. marginal maximum likelihood integrates product student ability assessment data, estimate linear model estimates student's ability based formula provided residual standard error term. integration happens minimum node maximum node control argument (described later section) Q quadrature points. stuItems argument scored student data. list element named student ID contains data.frame least two columns. first required column named key shows item name appears paramTab; second column named score shows score item. dichotomous items, score 0 1. GPCM items, scores start zero well. GRM, scores start 1. GPCM model, P0 “” parameter,  columns “d” parameters; see vignette details GPCM model. quadrature points range minNode maxNode total Q nodes.","code":""},{"path":"/reference/mml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"Harold Doran, Paul Bailey, Claire Kelley, Sun-joo Lee, Eric Buehler","code":""},{"path":"/reference/mml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"","code":"if (FALSE) { require(EdSurvey)  # 1) make param tab for dichotomous items dichotParamTab <- data.frame(ItemID = c(\"m109801\", \"m020001\", \"m111001\",                                         \"m046301\", \"m046501\", \"m051501\",                                         \"m111601\", \"m111301\", \"m111201\",                                         \"m110801\", \"m110101\"),                              test = rep(\"composite\",11),                              subtest = c(rep(\"num\",6),rep(\"alg\",5)),                              slope = c(0.96, 0.69, 0.83,                                        0.99, 1.03, 0.97,                                        1.45, 0.59, 0.34,                                        0.18, 1.20),                              difficulty = c(-0.37, -0.55,  0.85,                                             -0.97, -0.14,  1.21,                                              0.53, -1.84, -0.46,                                              2.43,  0.70),                              guessing = c(0.16, 0.00, 0.17,                                           0.31, 0.37, 0.18,                                           0.28, 0.15, 0.09,                                           0.05, 0.18),                              D = rep(1.7, 11),                              MODEL = rep(\"3pl\", 11))  # param tab for GPCM items polyParamTab <- data.frame(ItemID = factor(c(\"m0757cl\", \"m066501\")),                            test = rep(\"composite\",2),                            subtest = rep(\"alg\",2),                            slope = c(0.43, 0.52), # could also be called \"a\"                            itemLocation = c(-1.21, -0.96), # added to d1 ... dn                            d1 = c(2.38, -0.56),                             d2 = c(-0.57, 0.56),                            d3 = c(-1.18, NA),                            D = c(1.7, 1.7),                            scorePoints = c(4L, 3L)) # number of score points, read d1 to d(n-1) # read-in NAEP Primer data  sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\")) # read in these items items <- c(as.character(dichotParamTab$ItemID), as.character(polyParamTab$ItemID)) # dsex, student sex # origwt, full sample weights # repgrp1, stratum indicator # jkunit, PSU indicator edf <- getData(data=sdf, varnames=c(items, \"dsex\", \"origwt\", \"repgrp1\", \"jkunit\", \"sdracem\"),                omittedLevels = FALSE, returnJKreplicates=FALSE) # make up a student ID edf$sid <- paste0(\"S\",1:nrow(edf)) # apply simplified scoring for(i in 1:length(items)) {   coli <- items[i]   # save the original   rawcol <- paste0(coli,\"raw\")   edf[,rawcol] <- edf[,coli]   if( coli %in% dichotParamTab$ItemID) {     edf[,coli] <- ifelse(grepl(\"[ABCDE]\", edf[,rawcol]), 0, NA)     edf[,coli] <- ifelse(grepl(\"*\", edf[,rawcol]), 1, edf[,coli])   } else {     # scale for m066501     edf[,coli] <- ifelse(grepl(\"Incorrect\", edf[,rawcol]), 0, NA)     edf[,coli] <- ifelse(grepl(\"Partial\", edf[,rawcol]), 1, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Correct\", edf[,rawcol]), 2, edf[,coli])     # scale for m0757cl     edf[,coli] <- ifelse(grepl(\"None correct\", edf[,rawcol]), 0, edf[,coli])     edf[,coli] <- ifelse(grepl(\"One correct\", edf[,rawcol]), 1, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Two correct\", edf[,rawcol]), 2, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Three correct\", edf[,rawcol]), 3, edf[,coli])   }   edf[,rawcol] <- NULL # delete original }  # stuItems has one row per student/item combination stuItems <- edf[,c(\"sid\", items)] stuItems <- reshape(data=stuItems, varying=c(items), idvar=c(\"sid\"),                     direction=\"long\", v.names=\"score\", times=items, timevar=\"key\") # stuDat is one row per student an contains student-level information stuDat <- edf[,c(\"sid\", \"origwt\", \"repgrp1\", \"jkunit\", \"dsex\", \"sdracem\")]  # testDat shows scaling and weights for subtests, an overall score can be treated as a subtest testDat <- data.frame(test=c(\"composite\", \"composite\") ,                       subtest=c(\"num\", \"alg\"),                       location=c(277.1563, 280.2948),                       scale=c(37.7297, 36.3887),                       subtestWeight=c(0.3,0.7))  # estimate a regression for Algebra subscale mmlA <- mml(alg ~ dsex,             stuItems=stuItems, stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors mmlAs <- summary.mmlMeans(mmlA, varType=\"Taylor\")   # estimate a regression for Numeracy subscale mmlN <- mml(num ~ dsex,             stuItems=stuItems, stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors mmlNs <- summary.mmlMeans(mmlN, varType=\"Taylor\") mmlNs  # draw plausible values for mmlA head(pvd <- drawPVs.mmlMeans(mmlA)) # alternative specification head(pvs <- drawPVs.mmlMeans(summary.mmlMeans(mmlA, varType=\"Taylor\"), stochasticBeta=TRUE))  # composite regression  mmlC <- mml(composite ~ dsex ,             stuItems=stuItems, stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors summary(mmlC, varType=\"Taylor\")  # draw plausible values for mmlC head(pvd <- drawPVs.mmlCompositeMeans(mmlC)) # alternative specification  mmlCsum <- summary.mmlCompositeMeans(mmlC, varType=\"Taylor\") head(pvs <- drawPVs.mmlCompositeMeans(mmlCsum, stochasticBeta=TRUE))  }"}]
