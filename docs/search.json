[{"path":"/articles/MML.html","id":"parameter-estimation","dir":"Articles","previous_headings":"","what":"Parameter Estimation","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"Starting single construct MML model test data nn individuals, conditional set parameters set HH test items, likelihood regression equation $$\\begin{align} \\mathcal{L} (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) = \\prod_{=1}^N  \\left[ \\int \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(\\theta_i - \\bm{X}_i \\beta)^2}{2\\sigma^2}  \\, \\prod_{h=1}^H {\\rm Pr}(\\bm{R}_{ih}|\\theta_i,\\bm{P}_h) d\\theta_i \\right]^{\\bm{w}_i} \\end{align}$$ ℒ\\mathcal{L} likelihood regression parameters 𝛃\\bm{\\beta} full sample weights 𝐰i\\bm{w}_i conditional item score matrix 𝐑\\bm{R}, student covariate matrix 𝐗\\bm{X}, item parameter data 𝐏\\bm{P}; σ2\\sigma^2 variance regression residual; θi\\theta_i iith student’s latent ability measure integrated ; ${\\rm Pr}(\\bm{R}_{ih}|\\theta_i, \\bm{P}_h)$ probability individual ii’s score test item hh, conditional student’s ability item parameters 𝐏h\\bm{P}_h—see appendix example forms ${\\rm Pr}(\\bm{R}_{ih}|\\theta_i, \\bm{P}_h)$. integral evaluated using trapezoid rule quadrature points tqt_q quadrature weights δ\\delta $$\\begin{align} \\mathcal{L} (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) &= \\prod_{=1}^N \\left[ \\sum_{q=1}^Q \\delta \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(t_q - \\bm{X}_i \\bm{\\beta})^2}{2\\sigma^2} \\prod_{h=1}^H  {\\rm Pr}(\\bm{R}_{ih}|t_q, \\bm{P}_h)\\right]^{\\bm{w}_i} \\end{align}$$ δ\\delta distance two uniformly spaced quadrature points δ=tq+1−tq\\delta = t_{q+1} - t_{q} qq least one less QQ. range value QQ parameterize quadrature, accuracy varied ensure convergence. advantage trapezoidal rule fixed quadrature points allow values probability (portion inside product) calculated per student. log-likelihood given $$\\begin{align} \\ell (\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}) &= \\sum_{=1}^N \\bm{w}_i \\, {\\rm log} \\left[\\delta \\sum_{q=1}^Q \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp \\frac{-(t_q - \\bm{X}_i \\bm{\\beta})^2}{2\\sigma^2} \\prod_{j=1}^K  {\\rm Pr}(\\bm{R}_{ij}|t_q, \\bm{P}_j) \\right] \\end{align}$$ Note δ\\delta can removed optimization, presence adds ${\\rm log}(\\delta) \\sum \\bm{w}_i$ log-likelihood.","code":""},{"path":"/articles/MML.html","id":"composite-score-estimation","dir":"Articles","previous_headings":"Parameter Estimation","what":"Composite Score Estimation","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"outcome interest composite scores, parameters estimated separately estimating coefficients subscale (𝛃j\\bm{\\beta}_j subscale jj) calculating composite scores (𝛃c\\bm{\\beta}_c) using subscale weights (ωj\\omega_j). 𝛃c=∑j=1Jωj𝛃j\\begin{align} \\bm{\\beta}_{c} &= \\sum_{j=1}^J \\omega_j \\bm{\\beta}_j \\label{eq:composite} \\end{align} full covariance matrix residuals (𝛜\\bm{\\epsilon} vector) 𝚺=[σ12σ12⋯σ1Jσ12σ22⋯σ2J⋮⋮⋱⋮σ1Jσ2J⋯σJ2]\\begin{align} \\bm{\\Sigma} = \\left[ \\begin{array}{cccc} \\sigma_1^2 & \\sigma_{12} & \\cdots & \\sigma_{1J} \\\\                                         \\sigma_{12} & \\sigma_{2}^2 & \\cdots & \\sigma_{2J} \\\\                                        \\vdots      & \\vdots       & \\ddots & \\vdots \\\\                                        \\sigma_{1J} & \\sigma_{2J}  &  \\cdots & \\sigma_{J}^2 \\end{array} \\right] \\end{align} likelihood $$\\begin{align} \\ell \\left( \\sigma_{jj^\\prime} \\left| \\bm{\\beta}_j, \\bm{\\beta}_{j^\\prime} , \\sigma_j, \\sigma_{j^\\prime}; \\bm{w}, \\bm{R}, \\bm{X}, \\bm{P}\\right. \\right) &= \\sum_{n=1}^N \\bm{w}_n \\, {\\rm log} \\left\\{ \\int \\int \\frac{1}{2\\pi \\sqrt{\\left |{\\bm{\\Sigma}}_{(jj^\\prime)} \\right |}}\\exp \\left( \\hat{\\bm{\\epsilon}}^T_{jj^\\prime} {\\bm{\\Sigma}}_{(jj^\\prime)}^{-1} \\hat{\\bm{\\epsilon}}_{jj^\\prime} \\right) \\right. \\\\ &\\mathrel{\\phantom{=}} \\left. \\times \\left[ \\prod_{h=1}^{H_j}  {\\rm Pr}(\\bm{R}_{njh}|\\theta_j, \\bm{P}_{h^\\prime}) \\right] \\left[ \\prod_{h^\\prime=1}^{H_{j^\\prime}} {\\rm Pr}(\\bm{R}_{nj^\\prime h^\\prime}|\\theta_{j^\\prime}, \\bm{P}_{h^\\prime}) \\right] \\right\\} d\\theta_j d\\theta_{j^\\prime} \\label{eq:compcovlnl} \\end{align}$$ |𝚺(jj′)||\\bm{\\Sigma}_{(jj^\\prime)}| determinant 𝚺(jj′)\\bm{\\Sigma}_{(jj^\\prime)}, 𝚺̃(jj′)≡[σj2σjj′σjj′σj′2]\\begin{align} \\tilde{\\bm{\\Sigma}}_{(jj^\\prime)} \\equiv  \\left[ \\begin{array}{cc} \\sigma_j^2 & \\sigma_{jj^\\prime}  \\\\                                                       \\sigma_{jj^\\prime} & \\sigma_{j^\\prime}^2 \\end{array} \\right] \\end{align} residual term defined 𝛜̂jj′≡(θj−𝐗i𝛃jθj′−𝐗i𝛃j′)\\begin{align} \\hat{\\bm{\\epsilon}}_{jj^\\prime} \\equiv & \\left( \\begin{array}{c} \\theta_j - \\bm{X}_i \\bm{\\beta}_j  \\\\ \\theta_{j^\\prime} - \\bm{X}_i \\bm{\\beta}_{j^\\prime} \\end{array} \\right)  \\end{align} Notice parameters 𝛃j\\bm{\\beta}_j, 𝛃j′\\bm{\\beta}_{j^\\prime}, σj2\\sigma_j^2, σj′2\\sigma^2_{j^\\prime} taken subscale estimation, parameter fixed covariance term σij\\sigma_{ij}.","code":""},{"path":"/articles/MML.html","id":"variance-estimation","dir":"Articles","previous_headings":"","what":"Variance Estimation","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"Starting univariate case, estimating variance parameters 𝛃\\bm{\\beta} can done one several ways. inverse Hessian matrix consistent estimator estimator 𝛃\\bm{\\beta} consistent (Green, 2003, p. 520): $$\\begin{align} {\\rm Var}(\\bm{\\beta}) = -\\bm{H}(\\bm{\\beta})^{-1} =  - \\left[\\frac{\\partial^2 \\ell(\\bm{\\beta}, \\sigma|\\bm{w}, \\bm{R}, \\bm{X})}{\\partial \\bm{\\beta}^2} \\right]^{-1} \\label{eq:vbeta} \\end{align}$$ variance returned variance method set consistent left default. class variance estimators typically called “sandwich” “robust” variance estimators allow variation residual form $$\\begin{align} {\\rm Var}(\\bm{\\beta}) = H(\\bm{\\beta})^{-1} \\bm{V} H(\\bm{\\beta})^{-1} \\label{eq:sandwich} \\end{align}$$ VV estimate variance summed score function (Binder, 1983). convenience sample, provide two robust estimators. First, -called robust (Huber Huber-White) variance estimator uses 𝐕=∑=1N[∂ℓ(β,σ|𝐰i,𝐑i,𝐗i)∂β][∂ℓ(β,σ|𝐰i,𝐑i,𝐗i)∂β]′\\begin{align} \\bm{V} &= \\sum_{=1}^N \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\right] \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\right]^{'} \\label{eq:scorebased} \\end{align} Second, cluster robust case, partial derivatives summed within cluster 𝐕=∑c=1n′[∂ℓ(β,σ|𝐰c,𝐑c,𝐗c)∂β][∂ℓ(β,σ|𝐰c,𝐑c,𝐗c)∂β]′\\begin{align} \\bm{V} &= \\sum_{c=1}^{n^\\prime} \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} \\right] \\left[ \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} \\right]^{'} \\end{align} n′n^\\prime clusters, indexed cc, partial derivatives summed within group ncn_c members: ∂ℓ(β,σ|𝐰c,𝐑c,𝐗c)∂β=∑=1nc∂ℓ(β,σ|𝐰i,𝐑i,𝐗i)∂β\\begin{align} \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_c, \\bm{R}_c, \\bm{X}_c)}{\\partial \\beta} &= \\sum_{=1}^{n_c} \\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta} \\end{align} Finally, Dire impelments survey sampling method called Taylor series method uses formula Eq. , 𝐕\\bm{V} estimate variance score vector (Binder, 1983). implementation assumes two-stage design nan_a primary sampling units (PSUs) stratum aa summed across AA strata according 𝐕=∑=1A𝐕a\\begin{align} \\bm{V} &= \\sum_{=1}^\\bm{V}_a \\end{align} 𝐕a\\bm{V}_a variance estimate stratum aa defined 𝐕a=nana−1∑p=1na(𝐬p−𝐬‾)(𝐬p−𝐬‾)′\\begin{align} \\bm{V}_a &= \\frac{n_a}{n_a -1} \\sum_{p=1}^{n_a} \\left( \\bm{s}_p - \\bar{\\bm{s}}_a \\right)\\left( \\bm{s}_p - \\bar{\\bm{s}}_a \\right)' \\label{eq:Va} \\end{align} sps_p sum weighted (pseudo-) score vector includes units PSU pp stratum aa 𝐬‾\\bar{\\bm{s}}_a (unweighted) mean 𝐬p\\bm{s}_p terms stratum aa $$\\begin{align} s_p &=\\sum_{\\{\\rm PSU} \\ p}\\frac{\\partial \\ell(\\beta, \\sigma|\\bm{w}_i, \\bm{R}_i, \\bm{X}_i)}{\\partial \\beta}    & \\bar{\\bm{s}}_a&= \\frac{1}{n_a} \\sum_{p \\{\\rm stratum} \\ } s_p \\end{align}$$ stratum one PSU, 𝐕a\\bm{V}_a undefined. best approach analyst adjust strata PSU identifiers, manner consistent sampling approach, avoid singleton strata. Two simpler, automated, less defensible options available Dire. First, strata single PSUs can dropped variance estimation, yielding underestimate variance. second option singleton stratum use overall mean sps_p place s‾\\bar{s}_a. , 𝐬‾=1n′∑sp\\begin{align} \\bar{\\bm{s}} &= \\frac{1}{n^\\prime} \\sum s_p \\end{align} sum across PSUs, n′n^\\prime number PSUs across strata. , singleton stratum, Eq.  becomes 𝐕a=2(𝐬p−𝐬‾)(𝐬p−𝐬‾)′\\begin{align} \\bm{V}_a &= 2 \\left( \\bm{s}_p - \\bar{\\bm{s}} \\right)\\left( \\bm{s}_p - \\bar{\\bm{s}} \\right)' \\label{eq:Va1} \\end{align} value 2 used place nana−1\\frac{n_a}{n_a-1}, undefined na=1n_a=1. option can underestimate variance thought likely overestimate . advisable, possible assume information equality hessian (eq. ) score vector based covariance (eq. ) equal. user sets gradientHessian=TRUE Dire package uses short hand calculating results. Using option necessary get agreement software variance terms.","code":""},{"path":"/articles/MML.html","id":"univariate-degrees-of-freedom","dir":"Articles","previous_headings":"Variance Estimation","what":"Univariate degrees of freedom","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"Taylor series estimator, degrees freedom estimator also uses Welch-Satterthwaite (WS) degrees freedom estimate (dofWSdof_{WS}). WS weights require estimate degrees variance per independent group. clustered sample, available stratum. Following Binder (1983) Cohen (2002), contribution csc_s degrees freedom stratum ss defined 𝐳uj\\bm{z}_{uj} section, “Estimation Standard Errors Weighted Means Plausible Values Present, Using Taylor Series Method,” cs=wsnsns−1∑u=1ns𝐳uj𝐳ujT\\begin{align} c_s = w_s \\frac{n_s}{n_s-1} \\sum_{u=1}^{n_s} \\bm{z}_{uj} \\bm{z}_{uj}^T \\end{align} uu indexes PSUs stratum, nsn_s, wsw_s stratum weight, sum, stratum, unit’s full sample weights. Using csc_s values, degrees freedom $$\\begin{align} {\\rm dof}_{\\rm WS} = \\frac{\\left(\\sum c_s \\right)^2}{\\sum c_s^2} \\end{align}$$ uses formula Satterthwaite (1946), assuming one degree freedom per stratum.","code":""},{"path":"/articles/MML.html","id":"composite-score-variances","dir":"Articles","previous_headings":"Variance Estimation","what":"Composite Score Variances","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"case composite scores variance becomes complex one method supported, Taylor series. log-likelihood composite scores additively separable, covariances (including variances) can calculated two steps using Eq. . First, covariance matrix 𝛏\\bm{\\xi} formed, composite covariance terms estimated variance linear combination elements 𝛏\\bm{\\xi}. first step, methods section “Variance Estimation” applied Eq. , treating 𝛏\\bm{\\xi} fashion Eq.  treats 𝛃\\bm{\\beta}. step results block diagonal inverse Hessian matrix, block subscale, potentially dense matrix 𝐕\\bm{V}. matrix square S⋅(ζ+1)S \\cdot (\\zeta+1) rows columns, ζ\\zeta number elements regression formula (subscale), one added σ\\sigma terms. step results following matrix: $$\\begin{align} {\\rm Var}(\\bm{\\xi})=H(\\bm{\\xi})^{-1} \\bm{V} H(\\bm{\\xi})^{-1} \\end{align}$$ second step, composite coefficient iith variance term $$\\begin{align} {\\rm Var}(\\bm{\\xi}_{ci}) &= \\bm{e}_i H(\\bm{\\xi})^{-1} \\bm{V} H(\\bm{\\xi})^{-1} \\bm{e}_i \\end{align}$$ 𝛏ci\\bm{\\xi}_{ci} composite coefficient iith coefficient, 𝐞i\\bm{e}_{} vector weights arranged 𝛏ci=𝐞iT𝛏\\begin{align} \\bm{\\xi}_{ci} = \\bm{e}_{}^T \\bm{\\xi} \\end{align} covariance two terms, ii jj, simple extension $$\\begin{align} {\\rm Cov}(\\bm{\\beta}_{ci}, \\bm{\\beta}_{cj}) &= \\bm{e}_i H(\\bm{\\beta})^{-1} \\bm{V} H(\\bm{\\beta})^{-1} \\bm{e}_j \\end{align}$$ uses definition, 𝛏cj=𝐞jT𝛏\\begin{align} \\bm{\\xi}_{cj} &= \\bm{e}_{j}^T \\bm{\\xi} \\end{align} simple example may help clarify. Imagine composite score composed two subscales, 1 2, weights ω1=0.4\\omega_1 = 0.4 ω2=0.6\\omega_2=0.6. Supposed user interested regression form θ=+x1⋅b+ϵϵ∼N(0,σ)\\begin{align} \\theta = + x_1 \\cdot b + \\epsilon \\label{eq:compex} \\\\ \\epsilon \\sim N(0,\\sigma) \\end{align} regression Eq.  fit subscale 1 subscale 2; first fit yield estimated values {a1,b1,σ1}\\left\\{ a_1, b_1, \\sigma_1 \\right\\}, second fit yield {a2,b2,σ2}\\left\\{ a_2, b_2, \\sigma_2 \\right\\}. estimated value, example, aca_c, ac=0.4⋅α1+0.6⋅α2a_c = 0.4\\cdot\\alpha_1 + 0.6\\cdot\\alpha_2. stacking estimates together, 𝛉=[a1b1σ1a2b2σ2]\\begin{align} \\bm{\\theta} &= \\begin{bmatrix}  a_1 \\\\  b_1 \\\\  \\sigma_1\\\\  a_2 \\\\  b_2\\\\  \\sigma_2 \\end{bmatrix} \\end{align} covariance matrix can estimated result matrix $\\bm{\\Omega} \\equiv  {\\rm Var}(\\bm{\\beta})$ Eq.  six rows six columns. Using vector 𝐞1=[0.4000.600]\\begin{align} \\bm{e}_1 &= \\begin{bmatrix}  0.4 \\\\  0 \\\\  0\\\\  0.6 \\\\  0\\\\  0 \\end{bmatrix} \\end{align} can easily confirmed ac=𝐞1T𝛏a_c = \\bm{e}_1^T \\bm{\\xi}, ${\\rm Var}(a_c)= \\bm{e}_1^T \\bm{\\Omega} \\bm{e}_1$.","code":""},{"path":[]},{"path":"/articles/MML.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"Binder, D. . (1983). variances asymptotically normal estimators complex surveys. International Statistical Review, 51(3), 279–292. Black, P. E. (2019). Big-O notation. P. E. Black (Ed.), Dictionary algorithms data structures. Washington, DC: National Institute Standards Technology. Retrieved https://www.nist.gov/dads/HTML/bigOnotation.html Cohen, J. D., & Jiang, T. (1999). Comparison partially measured latent traits across nominal subgroups. Journal American Statistical Association, 94(448), 1035–1044. Green, W. H. (2003). Econometric analysis Upper Saddle River, NJ: Prentice Hall. Huber, P. J. (1967). behavior maximum likelihood estimates nonstandard conditions. Proceedings Fifth Berkeley Symposium Mathematical Statistics Probability, Vol. : Statistics (pp. 221–233). Berkeley, CA: University California Press. Johnson, S. G. (2010). Notes convergence trapezoidal-rule quadrature. Retrieved https://math.mit.edu/~stevenj/trapezoidal.pdf McCullagh, P. & Nelder, J. . (1989). Generalized linear models. (2nd ed.). London, UK: Chapman & Hall/CRC. NAEP. (2008). generalized partial credit model [NAEP Technical Documentation Website]. Retrieved https://nces.ed.gov/nationsreportcard/tdw/analysis/scaling_models_gen.aspx. White, H. (1980). heteroskedasticity-consistent covariance matrix estimator direct test heteroskedasticity. Econometrica, 48(4), 817–838.","code":""},{"path":"/articles/MML.html","id":"appendix--test-probability-density-functions","dir":"Articles","previous_headings":"","what":"Appendix. Test Probability Density Functions","title":"Weighted Marginal Maximum Likelihood Regression Estimation","text":"cases scored either correct incorrect, use three parameter logit (3PL) model: Pr(𝐑ij|θi,𝐏j)=gj+1−gj1+exp[−Daj(θi−dj)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= g_j + \\frac{1-g_j}{1+\\exp\\left[ -D \\, a_j \\, (\\theta_i - d_j)\\right]} \\label{eq:3PL} \\end{align} gjg_j guessing parameter, aja_j discrimination factor, djd_j item difficulty, DD constant, usually set 1.7, map θi\\theta_i djd_j terms probit-like space; term applied tradition. two parameter logit (2PL) used, Eq.  modified omit gjg_j (effectively setting zero): Pr(𝐑ij|θi,𝐏j)=11+exp[−Daj(θi−dj)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[ -D \\, a_j \\, (\\theta_i - d_j)\\right]} \\label{eq:2PL} \\end{align} Rasch model used, Eq.  modified set aja_j single aa, DD set one. Pr(𝐑ij|θi,𝐏j)=11+exp[−(θi−dj)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[ - \\, (\\theta_i - d_j)\\right]} \\label{eq:Rasch} \\end{align} Graded Response Model (GRM) probability density generalizes ordered logit (McCullagh & Nelder, 1989): Pr(𝐑ij|θi,𝐏j)=11+exp[−Daj(θi−dRij,j)]−11+exp[−Daj(θi−d1+Rij,j)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{1}{1+\\exp\\left[-D\\, a_j \\, (\\theta_i - d_{R_{ij},j})\\right]} - \\frac{1}{1+\\exp\\left[-D\\, a_j \\, (\\theta_i - d_{1+R_{ij},j})\\right]} \\label{eq:grm} \\end{align} parameters 𝐏j\\bm{P}_j cut points dcjd_{cj}, d0j=−∞d_{0j}=-\\infty dC+1,j=∞d_{C+1,j}=\\infty. first term right side Eq. , subscript RijR_{ij} dRij,jd_{R_{ij},j} indicates cut point associated response level item jj person ii, whereas last subscript (jj) indicates dd term item jj. second term, cut point cut point used. Generalized Partial Credit Model (GPCM) probability density generalizes multinomial logit (McCullagh & Nelder, 1989) Pr(𝐑ij|θi,𝐏j)=exp[∑c=0RijDaj(θi−dcj)]∑r=0Cexp[∑c=0rDaj(θi−dcj)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{\\exp \\left[ \\sum_{c=0}^{R_{ij}} D a_j (\\theta_i - d_{cj}) \\right]}{\\sum_{r=0}^{C} \\exp \\left[ \\sum_{c=0}^{r} D a_j (\\theta_i - d_{cj}) \\right]} \\end{align} cc indexes cut points, CC, jj indexes item. GPCM equation indeterminancy djd_j terms increase make values probability . can solve indeterminacy several ways. NAEP (2008) uses mean difficulty (bjb_j), djd_j values given d0j=0dcj=bj−δjc;1≤c≤C\\begin{align} d_{0j} &= 0 &       d_{cj} &= b_j - \\delta_{jc} \\, ; \\, 1 \\leq c \\leq C \\end{align} δjc\\delta_{jc} values estimated 0=∑c=1Cδjc0=\\sum_{c=1}^{C} \\delta_{jc}. package, polyParamTab itemLocation, serves b. itemLocation, package uses δ\\delta values directly d0j=0dcj=δjc;1≤c≤C\\begin{align} d_{0j} &= 0 &       d_{cj} &= \\delta_{jc} \\, ; \\, 1 \\leq c \\leq C \\end{align} Partial Credit Model (PCM) used, value DD set one, whereas aja_j shared across items. Pr(𝐑ij|θi,𝐏j)=exp[∑c=0Rija(θi−dcj)]∑r=0Cexp[∑c=0ra(θi−dcj)]\\begin{align} \\Pr(\\bm{R}_{ij}|\\theta_i, \\bm{P}_j) &= \\frac{\\exp \\left[ \\sum_{c=0}^{R_{ij}} (\\theta_i - d_{cj}) \\right]}{\\sum_{r=0}^{C} \\exp \\left[ \\sum_{c=0}^{r} (\\theta_i - d_{cj}) \\right]} \\end{align}","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emmanuel Sikali. Project director. Paul Bailey. Author, maintainer. Eric Buehler. Author. Sun-joo Lee. Author. Harold Doran. Author. Blue Webb. Author. Ali Fathi. Contributor. Claire Kelley. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bailey P, Buehler E, Lee S, Doran H, Webb B (2025). Dire: Linear Regressions Latent Outcome Variable. R package version 3.0.0, https://american-institutes--research.github.io/Dire/.","code":"@Manual{,   title = {Dire: Linear Regressions with a Latent Outcome Variable},   author = {Paul Bailey and Eric Buehler and Sun-joo Lee and Harold Doran and Blue Webb},   year = {2025},   note = {R package version 3.0.0},   url = {https://american-institutes-for-research.github.io/Dire/}, }"},{"path":"/index.html","id":"dire","dir":"","previous_headings":"","what":"Linear Regressions with a Latent Outcome Variable","title":"Linear Regressions with a Latent Outcome Variable","text":"package implements survey-weighted marginal maximum estimation, type regression outcome latent trait (student ability. Instead using estimate, likelihood function marginalizes student ability. Includes variety variance estimation strategies.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Linear Regressions with a Latent Outcome Variable","text":"installing package calling require(Dire) see ?mml information example.","code":""},{"path":"/reference/drawPVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw plausible values (PVs) from an mml fit — drawPVs","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"Draw plausible values (PVs) mml fit","code":""},{"path":"/reference/drawPVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"","code":"drawPVs(   x,   npv,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = deprecated(),   ... )  # S3 method for class 'summary.mmlMeans' drawPVs(   x,   npv = 5L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = deprecated(),   ... )  # S3 method for class 'mmlMeans' drawPVs(   x,   npv = 5L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = deprecated(),   ... )  # S3 method for class 'summary.mmlCompositeMeans' drawPVs(   x,   npv = 20L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = deprecated(),   ... )  # S3 method for class 'mmlCompositeMeans' drawPVs(   x,   npv = 20L,   pvVariableNameSuffix = \"_dire\",   stochasticBeta = deprecated(),   ... )"},{"path":"/reference/drawPVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"x fit call mml npv integer indicating number plausible values draw pvVariableNameSuffix suffix added new PV variables construct name plausible value ID. example, construct math suffix default _dire, fourth plausible value column name, math_dire4. stochasticBeta deprecated. ... additional parameters passed methods.","code":""},{"path":"/reference/drawPVs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"stuDat attribute mml fit object, x, columns new plausible values.","code":""},{"path":"/reference/drawPVs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"argument passed stocasticBeta data frame column element used regression coefficient index coefficients vector. row index used nth PV nth row.","code":""},{"path":"/reference/drawPVs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"Paul Bailey, Sun-joo Lee, Eric Buehler","code":""},{"path":"/reference/drawPVs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw plausible values (PVs) from an mml fit — drawPVs","text":"","code":"# See Examples in mml"},{"path":"/reference/mml.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Maximum Likelihood Estimation of Linear Models — mml","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"Implements survey-weighted marginal maximum estimation, type regression outcome latent trait (student ability). Instead using estimate, likelihood function marginalizes student ability. Includes variety variance estimation strategies.","code":""},{"path":"/reference/mml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"","code":"mml(   formula,   stuItems = NULL,   stuDat,   idVar,   dichotParamTab = NULL,   polyParamTab = NULL,   testScale = NULL,   Q = 66,   minNode = -5,   maxNode = 5,   polyModel = c(\"GPCM\", \"GRM\"),   weightVar = NULL,   multiCore = FALSE,   bobyqaControl = NULL,   composite = TRUE,   strataVar = NULL,   PSUVar = NULL,   fast = NULL,   calcCor = NULL,   verbose = 0,   retainedInformation = 1,   optimizer = c(\"EM\", \"QN\") )"},{"path":"/reference/mml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"formula formula object style lm stuItems deprecated. Simply put items stuDat now. stuDat data.frame single row per student. Predictors formula must stuDat well items. idVar variable name stuDat identifier. Every ID stuDat must appear stuItems vice versa. dichotParamTab data.frame dichotomous item information, see Details polyParamTab data.frame polytomous item information, see Details testScale data.frame scaling information, see Details Q integer; number integration points minNode numeric; smallest integration point latent variable maxNode numeric; largest integration point latent variable polyModel polytomous response model; one GPCM Graded Partial Credit Model GRM Graded Response Model weightVar variable name stuDat full sample weight multiCore logical indicating whether use parallel processing bobyqaControl deprecated. list gets passed bobyqa optimizer minqa composite logical indicating overall test treated composite score; composite weighted average subscales . strataVar character naming variable stuDat, variable indicating stratum row. Used post-hoc robust variance estimation. PSUVar character naming variable stuDat; primary sampling unit (PSU) variable. Used post-hoc robust variance estimation. values need unique across strata. fast deprecated. Always TRUE now. calcCor deprecated. Always TRUE now. verbose integer, negative zero details, increasingly verbose messages one two retainedInformation set value 1 fit model typically fit. value less one, principal component analysis performed columns associated principal components totaling least retainedInformation retained data discarded. estimated latent regression coefficients accordingly named PC1, ..., PCN. optimizer character naming optimization method use; one EM Expectation Maximization QN Quasi-Newton","code":""},{"path":"/reference/mml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"called single subscale overall score, returns object class mmlMeans. list elements: call call used generate mml.means object coefficients unscaled marginal maximum likelihood regression coefficients LogLik log-likelihood fit model getX function , called stuDat, returns design matrix marginal maximum likelihood regression Convergence convergence note optimizer location used scaling estimates scale used scaling estimates lnlf log-likelihood function unscaled parameters funcs list functions may evaluated vector parameters. first returns log-likelihood marginal maximum likelihood regression evaluated given parameters. second third correspond first second derivatives, respectively, MML regression evaluated parameters. rr1 density function individual, conditional item responses stuItems stuDat stuDat argument likelihood_stus rr1, pivoted long row corresponds student. weightVar name weight variable stuDat nodes nodes likelihood evaluated iterations number iterations required reach convergence obs number observations used testScale testScale used scale data weightedObs weighted N observations strataVar column name stratum variable stuDat; potentially used variance estimation PSUVar column name PSU variable stuDat; potentially used variance estimation itemScorePoints data frame shows item IDs, number score points, expected scores (paramTab arguments), well occupied score points formula formula passed mml contrasts contrasts used forming design matrix xlevels levels covariates used forming design matrix polyModel value argument name passed mml paramTab data frame condenses dichotParamTab polyParamTab fast value argument name passed mml idVar value argument name passed mml posteriorEsts posterior estimates people stuDat included model pred predicted outcome based estimated coefficients values list values used posterior estimation V diagonal matrix number columns design matrix composite score computed several subscales run return mmlCompositeMeans. Many elements list one element per construct. list elements: call call used generate mml.means object coefficients matrix unscaled marginal maximum likelihood regression coefficients, row represents subscale, column represents coefficient X design matrix marginal maximum likelihood regression rr1 list elements, rr1 object subscale (see mmlMeans output) ids ID variable used row stuDat Convergence vector convergence notes optimizer lnlfl list log-likelihood functions unscaled parameters, construct stuDat list stuDat data frames, used fitting construct, filtered just relevant student records weightVar name weight variable stuDat nodes nodes likelihood evaluated iterations vector number iterations required reach convergence construct obs vector number observations used construct testScale testScale used scale data weightedObs vector weighted N observations SubscaleVC covariance matrix subscales. residuals assumed multivariate normal covariance matrix idVar name identifier used stuDat stuItems data resl list mmlMeans objects, one per construct strataVar column name stratum variable stuDat; potentially used variance estimation PSUVar column name PSU variable stuDat; potentially used variance estimation stuItems data frame passed mml reformatted use mml formula formula passed mml contrasts contrasts used forming design matrix xlevels levels covariates used forming design matrix polyModel value argument name passed mml posteriorEsts list posterior estimates people stuDat included model SubscaleVC matrix latent correlations across constructs modelFrameFull full model frame stuDatSubsets logical matrix column per subscale row student; used subsetting students within subscales values list values used posterior estimation LogLik returned likelihood composite model.","code":""},{"path":"/reference/mml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"mml function models latent outcome conditioning item response data, covariate data, item parameter information, scaling information. four parts broken least one argument . Student item response data go stuItems; whereas student covariates, weights, sampling information go stuDat. dichotParamTab polyParamTab contain item parameter information dichotomous polytomous items, respectively—item parameter data result existing item parameter scaling. case National Assessment Educational Progress (NAEP), can found online, example, NAEP technical documentation. Finally, information scaling subscale weights composites put testScale. model dichotomous responses data , default, three Parameter Logit (3PL), unless item parameter information provided users suggests otherwise. example, scaling used two Parameter Logit (2PL) model, guessing parameter can simply set zero. polytomous responses data, model dictated polyModel argument. dichotParamTab argument data.frame column named ItemID identifies items agrees key column stuItems argument, ,  3PL item, columns slope, difficulty, guessing “”, “d”, “g” parameters, respectively; see vignette details 3PL model. Users can also use column names directly vignette notation (“”, “d”, “g”) prefer. Items missing (NA) used likelihood function. Users wishing apply special behavior subset items can use set items invalid score put dichotParamTab column missingCode. scored missingValue proportion correct. use guessing parameter proportion correct set missingValue “c”. polyParamTab columns ItemID must match key stuItems, well slope (can also called ) corresponds parameter vignette. Users must also specify location cut points (\\(d_{cj}\\) vignette) named d1, d2, ..., dn n one less number score points. people prefer also apply shift shift applied column named itemLocation simply adding every d* column. Items included likelihood individual value stuItems NA, provision made guessing, special provision missing codes polytomous items. dichotParamTab polyParamTab users wishing use D paramter 1.7 (value) may specify , per item, column named D. multiple constructs, subscales, user wants composite score, additional, optional, columns test subtest can used. columns can numeric text, must agree columns testScale scale results. Student data broken two parts. item response data goes stuItems, student covariates formula go stuDat. Information items, item difficulties, paramTab. dichotomous items assumed 3PL, though setting guessing parameter zero, user can use 2PL one Parameter Logit (1PL) Rasch models. model polytomous responses data dictated polyModel argument. marginal maximum likelihood integrates product student ability assessment data, estimate linear model estimates student's ability based formula provided residual standard error term. integration happens minimum node maximum node control argument (described later section) Q quadrature points. stuItems argument scored student data. list element named student ID contains data.frame least two columns. first required column named key shows item name appears paramTab; second column named score shows score item. dichotomous items, score 0 1. GPCM items, scores start zero well. GRM, scores start 1. GPCM model, P0 “” parameter, columns “d” parameters; see vignette details GPCM model. quadrature points range minNode maxNode total Q nodes.","code":""},{"path":"/reference/mml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"Harold Doran, Paul Bailey, Claire Kelley, Sun-joo Lee, Eric Buehler","code":""},{"path":"/reference/mml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal Maximum Likelihood Estimation of Linear Models — mml","text":"","code":"if (FALSE) { # \\dontrun{ require(EdSurvey)  # 1) make param tab for dichotomous items dichotParamTab <- data.frame(ItemID = c(\"m109801\", \"m020001\", \"m111001\",                                         \"m046301\", \"m046501\", \"m051501\",                                         \"m111601\", \"m111301\", \"m111201\",                                         \"m110801\", \"m110101\"),                              test = rep(\"composite\",11),                              subtest = c(rep(\"num\",6),rep(\"alg\",5)),                              slope = c(0.96, 0.69, 0.83,                                        0.99, 1.03, 0.97,                                        1.45, 0.59, 0.34,                                        0.18, 1.20),                              difficulty = c(-0.37, -0.55,  0.85,                                             -0.97, -0.14,  1.21,                                              0.53, -1.84, -0.46,                                              2.43,  0.70),                              guessing = c(0.16, 0.00, 0.17,                                           0.31, 0.37, 0.18,                                           0.28, 0.15, 0.09,                                           0.05, 0.18),                              D = rep(1.7, 11),                              MODEL = rep(\"3pl\", 11))  # param tab for GPCM items polyParamTab <- data.frame(ItemID = factor(c(\"m0757cl\", \"m066501\")),                            test = rep(\"composite\",2),                            subtest = rep(\"alg\",2),                            slope = c(0.43, 0.52), # could also be called \"a\"                            itemLocation = c(-1.21, -0.96), # added to d1 ... dn                            d1 = c(2.38, -0.56),                             d2 = c(-0.57, 0.56),                            d3 = c(-1.18, NA),                            D = c(1.7, 1.7),                            scorePoints = c(3L, 2L)) # number of score points, read d1 to d(n-1) # read-in NAEP Primer data  sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\")) # read in these items items <- c(as.character(dichotParamTab$ItemID), as.character(polyParamTab$ItemID)) # dsex, student sex # origwt, full sample weights # repgrp1, stratum indicator # jkunit, PSU indicator edf <- EdSurvey::getData(data=sdf,                          varnames=c(items, \"dsex\", \"origwt\", \"repgrp1\", \"jkunit\", \"sdracem\"),                          dropOmittedLevels = FALSE, returnJKreplicates=FALSE) # make up a student ID edf$sid <- paste0(\"S\",1:nrow(edf)) # apply simplified scoring for(i in 1:length(items)) {   coli <- items[i]   # save the original   rawcol <- paste0(coli,\"raw\")   edf[,rawcol] <- edf[,coli]   if( coli %in% dichotParamTab$ItemID) {     edf[,coli] <- ifelse(grepl(\"[ABCDE]\", edf[,rawcol]), 0, NA)     edf[,coli] <- ifelse(grepl(\"Incorrect\", edf[,rawcol]), 0, edf[,coli])     edf[,coli] <- ifelse(grepl(\"[*]\", edf[,rawcol]), 1, edf[,coli])   } else {     # scale for m066501     edf[,coli] <- ifelse(grepl(\"Incorrect\", edf[,rawcol]), 0, NA)     edf[,coli] <- ifelse(grepl(\"Partial\", edf[,rawcol]), 1, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Correct\", edf[,rawcol]), 2, edf[,coli])     # scale for m0757cl     edf[,coli] <- ifelse(grepl(\"None correct\", edf[,rawcol]), 0, edf[,coli])     edf[,coli] <- ifelse(grepl(\"One correct\", edf[,rawcol]), 1, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Two correct\", edf[,rawcol]), 2, edf[,coli])     edf[,coli] <- ifelse(grepl(\"Three correct\", edf[,rawcol]), 3, edf[,coli])   }   edf[,rawcol] <- NULL # delete original } # end scoreing  # stuDat is one row per student an contains student-level information stuDat <- edf[,c(\"sid\", \"origwt\", \"repgrp1\", \"jkunit\", \"dsex\", \"sdracem\", items)]  # testDat shows scaling and weights for subtests, an overall score can be treated as a subtest testDat <- data.frame(test=c(\"composite\", \"composite\") ,                       subtest=c(\"num\", \"alg\"),                       location=c(277.1563, 280.2948),                       scale=c(37.7297, 36.3887),                       subtestWeight=c(0.3,0.7))  # estimate a regression for Algebra subscale mmlA <- mml(alg ~ dsex,             stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors summary(mmlA)   # estimate a regression for Numeracy subscale mmlN <- mml(num ~ dsex,             stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             Q=128,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors summary(mmlN)  # draw plausible values for mmlA pvd <- drawPVs(summary(mmlA)) head(pvd)  # composite regression  mmlC <- mml(composite ~ dsex ,             stuDat=stuDat,             dichotParamTab=dichotParamTab, polyParamTab=polyParamTab,             testScale=testDat,             idVar=\"sid\", weightVar=\"origwt\", # these are column names on stuDat             strataVar=\"repgrp1\", PSUVar=\"jkunit\") # summary, with Taylor standard errors mmlCsum <- summary(mmlC) mmlCsum # show results  # draw plausible values for mmlC, show first few rows pvc <- drawPVs(mmlCsum) head(pvc)  } # }"}]
